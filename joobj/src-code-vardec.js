/*
| This is an autogenerated file.
|
| DO NOT EDIT!
*/


/*
| Export
*/
var
	Code =
		Code || { };


/*
| Imports
*/
var
	JoobjProto,
	Jools;


/*
| Capsule
*/
(function( ) {
'use strict';


var
	_tag =
		169626839;


/*
| Node includes
*/
if( SERVER )
{
	JoobjProto =
		require( '../src/joobj/proto' );

	Jools =
		require( '../src/jools/jools' );
}


/*
| Constructor.
*/
var Vardec =
Code.Vardec =
	function(
		tag,
		v_assign, // Assignment of variable
		v_name    // variable name
	)
{

/**/if( CHECK )
/**/{
/**/	if( tag !== _tag )
/**/	{
/**/		throw new Error(
/**/			'tag mismatch'
/**/		);
/**/	}
/**/}

	this.assign =
		v_assign;

	this.name =
		v_name;

	Jools.immute( this );
};


/*
| Creates a new Vardec object.
*/
Vardec.create =
Vardec.prototype.create =
	function(
		// free strings
	)
{
	var
		inherit,
		v_assign,
		v_name;

	if( this !== Vardec )
	{
		inherit =
			this;

		v_assign =
			this.assign;

		v_name =
			this.name;
	}

	for(
		var a = 0, aZ = arguments.length;
		a < aZ;
		a += 2
	)
	{
		var
			arg =
				arguments[ a + 1 ];

		switch( arguments[ a ] )
		{
			case 'assign' :

				if( arg !== undefined )
				{
					v_assign =
						arg;
				}

				break;

			case 'name' :

				if( arg !== undefined )
				{
					v_name =
						arg;
				}

				break;

			default :

/**/			if( CHECK )
/**/			{
/**/				throw new Error(
/**/					'invalid argument: ' + arguments[ a ]
/**/				);
/**/			}
		}
	}

	if( v_assign === undefined )
	{
		v_assign =
			null;
	}

/**/if( CHECK )
/**/{
/**/
/**/	if( v_assign === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute assign'
/**/		);
/**/	}
/**/
/**/	if( v_name === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute name'
/**/		);
/**/	}
/**/
/**/	if( v_name === null )
/**/	{
/**/		throw new Error(
/**/			'name must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_name ) !== 'string'
/**/		&&
/**/		!( v_name instanceof String )
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/}

	if(
		inherit
		&&
		v_assign === inherit.assign
		&&
		v_name === inherit.name
	)
	{
		return inherit;
	}

	return (
		new Vardec(
			_tag,
			v_assign,
			v_name
		)
	);
};


/*
| Reflection.
*/
Vardec.prototype.reflect =
	'Vardec';


/*
| Sets values by path.
*/
Vardec.prototype.setPath =
	JoobjProto.setPath;


/*
| Gets values by path.
*/
Vardec.prototype.getPath =
	JoobjProto.getPath;


/*
| Checks for equal objects.
*/
Vardec.prototype.equals =
	function(
		obj
	)
{
	if( this === obj )
	{
		return true;
	}

	if( !obj )
	{
		return false;
	}

	return (
		(
			this.assign === obj.assign ||
			(
				this.assign !== null
				&&
				this.assign.equals( obj.assign )
			)
		)
		&&
		this.name === obj.name
	);
};


/*
| Node export
*/
if( SERVER )
{
	module.exports =
		Vardec;
}


} )( );
