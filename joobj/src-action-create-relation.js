/*
| This is an autogenerated file.
|
| DO NOT EDIT!
*/


/*
| Export
*/
var
	Action =
		Action || { };


/*
| Imports
*/
var
	JoobjProto,
	Jools;


/*
| Capsule
*/
(function( ) {
'use strict';


var
	_tag =
		313415263;


/*
| Constructor.
*/
var CreateRelation =
Action.CreateRelation =
	function(
		tag,
		v_fromItemPath,  // the item the relation goes from
		v_pan,           // starting pan when panning during creation
		v_relationState, // the state of the relation creation
		v_start,         // mouse down point on drag creation
		v_toItemPath,    // the item the relation goes to
		v_toPoint        // the arrow destination while its floating
	)
{

/**/if( CHECK )
/**/{
/**/	if( tag !== _tag )
/**/	{
/**/		throw new Error(
/**/			'tag mismatch'
/**/		);
/**/	}
/**/}

	this.fromItemPath =
		v_fromItemPath;

	this.pan =
		v_pan;

	this.relationState =
		v_relationState;

	this.start =
		v_start;

	this.toItemPath =
		v_toItemPath;

	this.toPoint =
		v_toPoint;

	Jools.immute( this );
};


Jools.subclass(
	CreateRelation,
	Action.Action
);


/*
| Creates a new CreateRelation object.
*/
CreateRelation.create =
CreateRelation.prototype.create =
	function(
		// free strings
	)
{
	var
		inherit,
		v_fromItemPath,
		v_pan,
		v_relationState,
		v_start,
		v_toItemPath,
		v_toPoint;

	if( this !== CreateRelation )
	{
		inherit =
			this;

		v_fromItemPath =
			this.fromItemPath;

		v_pan =
			this.pan;

		v_relationState =
			this.relationState;

		v_start =
			this.start;

		v_toItemPath =
			this.toItemPath;

		v_toPoint =
			this.toPoint;
	}

	for(
		var a = 0, aZ = arguments.length;
		a < aZ;
		a += 2
	)
	{
		var
			arg =
				arguments[ a + 1 ];

		switch( arguments[ a ] )
		{
			case 'fromItemPath' :

				if( arg !== undefined )
				{
					v_fromItemPath =
						arg;
				}

				break;

			case 'pan' :

				if( arg !== undefined )
				{
					v_pan =
						arg;
				}

				break;

			case 'relationState' :

				if( arg !== undefined )
				{
					v_relationState =
						arg;
				}

				break;

			case 'start' :

				if( arg !== undefined )
				{
					v_start =
						arg;
				}

				break;

			case 'toItemPath' :

				if( arg !== undefined )
				{
					v_toItemPath =
						arg;
				}

				break;

			case 'toPoint' :

				if( arg !== undefined )
				{
					v_toPoint =
						arg;
				}

				break;

			default :

/**/			if( CHECK )
/**/			{
/**/				throw new Error(
/**/					'invalid argument: ' + arguments[ a ]
/**/				);
/**/			}
		}
	}

	if( v_pan === undefined )
	{
		v_pan =
			null;
	}

	if( v_start === undefined )
	{
		v_start =
			null;
	}

	if( v_toPoint === undefined )
	{
		v_toPoint =
			null;
	}

/**/if( CHECK )
/**/{
/**/
/**/	if( v_fromItemPath === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute fromItemPath'
/**/		);
/**/	}
/**/
/**/	if( v_fromItemPath === null )
/**/	{
/**/		throw new Error(
/**/			'fromItemPath must not be null'
/**/		);
/**/	}
/**/	if( v_fromItemPath.reflect !== 'Path' )
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_pan === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute pan'
/**/		);
/**/	}
/**/
/**/	if( v_pan !== null )
/**/	{
/**/		if( v_pan.reflect !== 'Point' )
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_relationState === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute relationState'
/**/		);
/**/	}
/**/
/**/	if( v_relationState === null )
/**/	{
/**/		throw new Error(
/**/			'relationState must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_relationState ) !== 'string'
/**/		&&
/**/		!( v_relationState instanceof String )
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_start === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute start'
/**/		);
/**/	}
/**/
/**/	if( v_start !== null )
/**/	{
/**/		if( v_start.reflect !== 'Point' )
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_toItemPath === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute toItemPath'
/**/		);
/**/	}
/**/
/**/	if( v_toItemPath === null )
/**/	{
/**/		throw new Error(
/**/			'toItemPath must not be null'
/**/		);
/**/	}
/**/	if( v_toItemPath.reflect !== 'Path' )
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_toPoint === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute toPoint'
/**/		);
/**/	}
/**/
/**/	if( v_toPoint !== null )
/**/	{
/**/		if( v_toPoint.reflect !== 'Point' )
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/}

	if(
		inherit
		&&
		v_fromItemPath.equals( inherit.fromItemPath )
		&&
		(
			v_pan === inherit.pan
			||
			(
				v_pan
				&&
				v_pan.equals( inherit.pan )
			)
		)
		&&
		v_relationState === inherit.relationState
		&&
		(
			v_start === inherit.start
			||
			(
				v_start
				&&
				v_start.equals( inherit.start )
			)
		)
		&&
		v_toItemPath.equals( inherit.toItemPath )
		&&
		(
			v_toPoint === inherit.toPoint
			||
			(
				v_toPoint
				&&
				v_toPoint.equals( inherit.toPoint )
			)
		)
	)
	{
		return inherit;
	}

	return (
		new CreateRelation(
			_tag,
			v_fromItemPath,
			v_pan,
			v_relationState,
			v_start,
			v_toItemPath,
			v_toPoint
		)
	);
};


/*
| Reflection.
*/
CreateRelation.prototype.reflect =
	'CreateRelation';


/*
| Sets values by path.
*/
CreateRelation.prototype.setPath =
	JoobjProto.setPath;


/*
| Gets values by path.
*/
CreateRelation.prototype.getPath =
	JoobjProto.getPath;


/*
| Checks for equal objects.
*/
CreateRelation.prototype.equals =
	function(
		obj
	)
{
	return this === obj;
};


} )( );
