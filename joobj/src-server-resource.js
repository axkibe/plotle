/*
| This is an autogenerated file.
|
| DO NOT EDIT!
*/


/*
| Export
*/
var
	Resource;


/*
| Imports
*/
var
	JoobjProto,
	Jools;


/*
| Capsule
*/
(function( ) {
'use strict';


var
	_tag =
		757258600;


/*
| Node includes
*/
if( SERVER )
{
	JoobjProto =
		require( '../src/joobj/proto' );

	Jools =
		require( '../src/jools/jools' );
}


/*
| Constructor.
*/
Resource =
	function(
		tag,
		v_aliases,       // the list of aliases this is server under
		v_coding,        // "binary" or "utf-8"
		v_data,          // cached or auto generated data
		v_devel,         // if true is only loaded in devel mode
		v_filePath,      // path of the resources file
		v_gzip,          // cached or auto generated zip data
		v_hasJoobj,      // true if this resource has a joobj def.
		v_inBundle,      // true if this resource is in the bundle
		v_inTestPad,     // true if this resource is in the testpad
		v_isJoobj,       // true if this resource is a joobj.
		v_joobjSrcPath,  // source file of a joobj
		v_maxage,        // "none", "short" or "long"
		v_mime,          // mime type
		v_postProcessor  // post processor replacing stuff
	)
{

/**/if( CHECK )
/**/{
/**/	if( tag !== _tag )
/**/	{
/**/		throw new Error(
/**/			'tag mismatch'
/**/		);
/**/	}
/**/}

	this.aliases =
		v_aliases;

	if( v_coding !== undefined )
	{
		this.coding =
			v_coding;
	}

	if( v_data !== undefined )
	{
		this.data =
			v_data;
	}

	this.devel =
		v_devel;

	this.filePath =
		v_filePath;

	if( v_gzip !== undefined )
	{
		this.gzip =
			v_gzip;
	}

	this.hasJoobj =
		v_hasJoobj;

	this.inBundle =
		v_inBundle;

	this.inTestPad =
		v_inTestPad;

	this.isJoobj =
		v_isJoobj;

	if( v_joobjSrcPath !== undefined )
	{
		this.joobjSrcPath =
			v_joobjSrcPath;
	}

	this.maxage =
		v_maxage;

	if( v_mime !== undefined )
	{
		this.mime =
			v_mime;
	}

	if( v_postProcessor !== undefined )
	{
		this.postProcessor =
			v_postProcessor;
	}

	this._init( );

	Jools.immute( this );
};


/*
| Creates a new Resource object.
*/
Resource.create =
Resource.prototype.create =
	function(
		// free strings
	)
{
	var
		inherit,
		v_aliases,
		v_coding,
		v_data,
		v_devel,
		v_filePath,
		v_gzip,
		v_hasJoobj,
		v_inBundle,
		v_inTestPad,
		v_isJoobj,
		v_joobjSrcPath,
		v_maxage,
		v_mime,
		v_postProcessor;

	if( this !== Resource )
	{
		inherit =
			this;

		v_aliases =
			this.aliases;

		v_coding =
			this.coding;

		v_data =
			this.data;

		v_devel =
			this.devel;

		v_filePath =
			this.filePath;

		v_gzip =
			this.gzip;

		v_hasJoobj =
			this.hasJoobj;

		v_inBundle =
			this.inBundle;

		v_inTestPad =
			this.inTestPad;

		v_isJoobj =
			this.isJoobj;

		v_joobjSrcPath =
			this.joobjSrcPath;

		v_maxage =
			this.maxage;

		v_mime =
			this.mime;

		v_postProcessor =
			this.postProcessor;
	}

	for(
		var a = 0, aZ = arguments.length;
		a < aZ;
		a += 2
	)
	{
		var
			arg =
				arguments[ a + 1 ];

		switch( arguments[ a ] )
		{
			case 'aliases' :

				if( arg !== undefined )
				{
					v_aliases =
						arg;
				}

				break;

			case 'coding' :

				if( arg !== undefined )
				{
					v_coding =
						arg;
				}

				break;

			case 'data' :

				if( arg !== undefined )
				{
					v_data =
						arg;
				}

				break;

			case 'devel' :

				if( arg !== undefined )
				{
					v_devel =
						arg;
				}

				break;

			case 'filePath' :

				if( arg !== undefined )
				{
					v_filePath =
						arg;
				}

				break;

			case 'gzip' :

				if( arg !== undefined )
				{
					v_gzip =
						arg;
				}

				break;

			case 'hasJoobj' :

				if( arg !== undefined )
				{
					v_hasJoobj =
						arg;
				}

				break;

			case 'inBundle' :

				if( arg !== undefined )
				{
					v_inBundle =
						arg;
				}

				break;

			case 'inTestPad' :

				if( arg !== undefined )
				{
					v_inTestPad =
						arg;
				}

				break;

			case 'isJoobj' :

				if( arg !== undefined )
				{
					v_isJoobj =
						arg;
				}

				break;

			case 'joobjSrcPath' :

				if( arg !== undefined )
				{
					v_joobjSrcPath =
						arg;
				}

				break;

			case 'maxage' :

				if( arg !== undefined )
				{
					v_maxage =
						arg;
				}

				break;

			case 'mime' :

				if( arg !== undefined )
				{
					v_mime =
						arg;
				}

				break;

			case 'postProcessor' :

				if( arg !== undefined )
				{
					v_postProcessor =
						arg;
				}

				break;

			default :

/**/			if( CHECK )
/**/			{
/**/				throw new Error(
/**/					'invalid argument: ' + arguments[ a ]
/**/				);
/**/			}
		}
	}

	if( v_aliases === undefined )
	{
		v_aliases =
			null;
	}

	if( v_coding === undefined )
	{
		v_coding =
			undefined;
	}

	if( v_data === undefined )
	{
		v_data =
			undefined;
	}

	if( v_devel === undefined )
	{
		v_devel =
			false;
	}

	if( v_gzip === undefined )
	{
		v_gzip =
			undefined;
	}

	if( v_hasJoobj === undefined )
	{
		v_hasJoobj =
			false;
	}

	if( v_inBundle === undefined )
	{
		v_inBundle =
			false;
	}

	if( v_inTestPad === undefined )
	{
		v_inTestPad =
			false;
	}

	if( v_isJoobj === undefined )
	{
		v_isJoobj =
			false;
	}

	if( v_joobjSrcPath === undefined )
	{
		v_joobjSrcPath =
			undefined;
	}

	if( v_maxage === undefined )
	{
		v_maxage =
			'none';
	}

	if( v_mime === undefined )
	{
		v_mime =
			undefined;
	}

	if( v_postProcessor === undefined )
	{
		v_postProcessor =
			undefined;
	}

/**/if( CHECK )
/**/{
/**/
/**/	if( v_aliases === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute aliases'
/**/		);
/**/	}
/**/
/**/	if( v_coding === null )
/**/	{
/**/		throw new Error(
/**/			'coding must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_coding !== undefined )
/**/	{
/**/		if(
/**/			typeof( v_coding ) !== 'string'
/**/			&&
/**/			!( v_coding instanceof String )
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_data === null )
/**/	{
/**/		throw new Error(
/**/			'data must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_devel === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute devel'
/**/		);
/**/	}
/**/
/**/	if( v_devel === null )
/**/	{
/**/		throw new Error(
/**/			'devel must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_devel ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_filePath === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute filePath'
/**/		);
/**/	}
/**/
/**/	if( v_filePath !== null )
/**/	{
/**/		if(
/**/			typeof( v_filePath ) !== 'string'
/**/			&&
/**/			!( v_filePath instanceof String )
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_gzip === null )
/**/	{
/**/		throw new Error(
/**/			'gzip must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_hasJoobj === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute hasJoobj'
/**/		);
/**/	}
/**/
/**/	if( v_hasJoobj === null )
/**/	{
/**/		throw new Error(
/**/			'hasJoobj must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_hasJoobj ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_inBundle === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute inBundle'
/**/		);
/**/	}
/**/
/**/	if( v_inBundle === null )
/**/	{
/**/		throw new Error(
/**/			'inBundle must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_inBundle ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_inTestPad === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute inTestPad'
/**/		);
/**/	}
/**/
/**/	if( v_inTestPad === null )
/**/	{
/**/		throw new Error(
/**/			'inTestPad must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_inTestPad ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_isJoobj === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute isJoobj'
/**/		);
/**/	}
/**/
/**/	if( v_isJoobj === null )
/**/	{
/**/		throw new Error(
/**/			'isJoobj must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_isJoobj ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_joobjSrcPath === null )
/**/	{
/**/		throw new Error(
/**/			'joobjSrcPath must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_joobjSrcPath !== undefined )
/**/	{
/**/		if(
/**/			typeof( v_joobjSrcPath ) !== 'string'
/**/			&&
/**/			!( v_joobjSrcPath instanceof String )
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_maxage === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute maxage'
/**/		);
/**/	}
/**/
/**/	if( v_maxage === null )
/**/	{
/**/		throw new Error(
/**/			'maxage must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_maxage ) !== 'string'
/**/		&&
/**/		!( v_maxage instanceof String )
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_mime === null )
/**/	{
/**/		throw new Error(
/**/			'mime must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_mime !== undefined )
/**/	{
/**/		if(
/**/			typeof( v_mime ) !== 'string'
/**/			&&
/**/			!( v_mime instanceof String )
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/
/**/	if( v_postProcessor === null )
/**/	{
/**/		throw new Error(
/**/			'postProcessor must not be null'
/**/		);
/**/	}
/**/
/**/	if( v_postProcessor !== undefined )
/**/	{
/**/		if(
/**/			typeof( v_postProcessor ) !== 'string'
/**/			&&
/**/			!( v_postProcessor instanceof String )
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/}

	if(
		inherit
		&&
		v_aliases === inherit.aliases
		&&
		v_coding === inherit.coding
		&&
		v_data === inherit.data
		&&
		v_devel === inherit.devel
		&&
		v_filePath === inherit.filePath
		&&
		v_gzip === inherit.gzip
		&&
		v_hasJoobj === inherit.hasJoobj
		&&
		v_inBundle === inherit.inBundle
		&&
		v_inTestPad === inherit.inTestPad
		&&
		v_isJoobj === inherit.isJoobj
		&&
		v_joobjSrcPath === inherit.joobjSrcPath
		&&
		v_maxage === inherit.maxage
		&&
		v_mime === inherit.mime
		&&
		v_postProcessor === inherit.postProcessor
	)
	{
		return inherit;
	}

	return (
		new Resource(
			_tag,
			v_aliases,
			v_coding,
			v_data,
			v_devel,
			v_filePath,
			v_gzip,
			v_hasJoobj,
			v_inBundle,
			v_inTestPad,
			v_isJoobj,
			v_joobjSrcPath,
			v_maxage,
			v_mime,
			v_postProcessor
		)
	);
};


/*
| Reflection.
*/
Resource.prototype.reflect =
	'Resource';


/*
| Sets values by path.
*/
Resource.prototype.setPath =
	JoobjProto.setPath;


/*
| Gets values by path.
*/
Resource.prototype.getPath =
	JoobjProto.getPath;


/*
| Checks for equal objects.
*/
Resource.prototype.equals =
	function(
		obj
	)
{
	if( this === obj )
	{
		return true;
	}

	if( !obj )
	{
		return false;
	}

	return (
		(
			this.aliases === obj.aliases ||
			(
				this.aliases !== null
				&&
				this.aliases.equals( obj.aliases )
			)
		)
		&&
		this.coding === obj.coding
		&&
		this.data.equals( obj.data )
		&&
		this.devel === obj.devel
		&&
		this.filePath === obj.filePath
		&&
		this.gzip.equals( obj.gzip )
		&&
		this.hasJoobj === obj.hasJoobj
		&&
		this.inBundle === obj.inBundle
		&&
		this.inTestPad === obj.inTestPad
		&&
		this.isJoobj === obj.isJoobj
		&&
		this.joobjSrcPath === obj.joobjSrcPath
		&&
		this.maxage === obj.maxage
		&&
		this.mime === obj.mime
		&&
		this.postProcessor === obj.postProcessor
	);
};


/*
| Node export
*/
if( SERVER )
{
	module.exports =
		Resource;
}


} )( );
