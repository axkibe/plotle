/*
| This is an autogenerated file.
|
| DO NOT EDIT!
*/


/*
| Export
*/
var
	Action =
		Action || { };


/*
| Imports
*/
var
	JoobjProto,
	Jools;


/*
| Capsule
*/
(function( ) {
'use strict';


var
	_tag =
		894306004;


/*
| Constructor.
*/
var Pan =
Action.Pan =
	function(
		tag,
		v_pan,   // pan position on start
		v_start  // mouse down point on start of scrolling
	)
{

/**/if( CHECK )
/**/{
/**/	if( tag !== _tag )
/**/	{
/**/		throw new Error(
/**/			'tag mismatch'
/**/		);
/**/	}
/**/}

	this.pan =
		v_pan;

	this.start =
		v_start;

	Jools.immute( this );
};


Jools.subclass(
	Pan,
	Action.Action
);


/*
| Creates a new Pan object.
*/
Pan.create =
Pan.prototype.create =
	function(
		// free strings
	)
{
	var
		inherit,
		v_pan,
		v_start;

	if( this !== Pan )
	{
		inherit =
			this;

		v_pan =
			this.pan;

		v_start =
			this.start;
	}

	for(
		var a = 0, aZ = arguments.length;
		a < aZ;
		a += 2
	)
	{
		var
			arg =
				arguments[ a + 1 ];

		switch( arguments[ a ] )
		{
			case 'pan' :

				if( arg !== undefined )
				{
					v_pan =
						arg;
				}

				break;

			case 'start' :

				if( arg !== undefined )
				{
					v_start =
						arg;
				}

				break;

			default :

/**/			if( CHECK )
/**/			{
/**/				throw new Error(
/**/					'invalid argument: ' + arguments[ a ]
/**/				);
/**/			}
		}
	}

/**/if( CHECK )
/**/{
/**/
/**/	if( v_pan === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute pan'
/**/		);
/**/	}
/**/
/**/	if( v_pan === null )
/**/	{
/**/		throw new Error(
/**/			'pan must not be null'
/**/		);
/**/	}
/**/	if( v_pan.reflect !== 'Point' )
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_start === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute start'
/**/		);
/**/	}
/**/
/**/	if( v_start === null )
/**/	{
/**/		throw new Error(
/**/			'start must not be null'
/**/		);
/**/	}
/**/	if( v_start.reflect !== 'Point' )
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/}

	if(
		inherit
		&&
		v_pan.equals( inherit.pan )
		&&
		v_start.equals( inherit.start )
	)
	{
		return inherit;
	}

	return (
		new Pan(
			_tag,
			v_pan,
			v_start
		)
	);
};


/*
| Reflection.
*/
Pan.prototype.reflect =
	'Pan';


/*
| Sets values by path.
*/
Pan.prototype.setPath =
	JoobjProto.setPath;


/*
| Gets values by path.
*/
Pan.prototype.getPath =
	JoobjProto.getPath;


/*
| Checks for equal objects.
*/
Pan.prototype.equals =
	function(
		obj
	)
{
	return this === obj;
};


} )( );
