/*
| This is an autogenerated file.
|
| DO NOT EDIT!
*/


/*
| Export
*/
var
	Mark =
		Mark || { };


/*
| Imports
*/
var
	JoobjProto,
	Jools;


/*
| Capsule
*/
(function( ) {
'use strict';


var
	_tag =
		412248159;


/*
| Constructor.
*/
var Caret =
Mark.Caret =
	function(
		tag,
		v_at,      // offset of the caret
		v_focus,   // the shell has the system focus
		v_path,    // path of the caret
		v_retainx  // x-position of the caret kept
	)
{

/**/if( CHECK )
/**/{
/**/	if( tag !== _tag )
/**/	{
/**/		throw new Error(
/**/			'tag mismatch'
/**/		);
/**/	}
/**/}

	this.at =
		v_at;

	this.focus =
		v_focus;

	this.path =
		v_path;

	this.retainx =
		v_retainx;

	this._init( );

	Jools.immute( this );
};


Jools.subclass(
	Caret,
	Mark.Mark
);


/*
| Creates a new Caret object.
*/
Caret.create =
Caret.prototype.create =
	function(
		// free strings
	)
{
	var
		inherit,
		v_at,
		v_focus,
		v_path,
		v_retainx;

	if( this !== Caret )
	{
		inherit =
			this;

		v_at =
			this.at;

		v_focus =
			this.focus;

		v_path =
			this.path;

		v_retainx =
			this.retainx;
	}

	for(
		var a = 0, aZ = arguments.length;
		a < aZ;
		a += 2
	)
	{
		var
			arg =
				arguments[ a + 1 ];

		switch( arguments[ a ] )
		{
			case 'at' :

				if( arg !== undefined )
				{
					v_at =
						arg;
				}

				break;

			case 'focus' :

				if( arg !== undefined )
				{
					v_focus =
						arg;
				}

				break;

			case 'path' :

				if( arg !== undefined )
				{
					v_path =
						arg;
				}

				break;

			case 'retainx' :

				if( arg !== undefined )
				{
					v_retainx =
						arg;
				}

				break;

			default :

/**/			if( CHECK )
/**/			{
/**/				throw new Error(
/**/					'invalid argument: ' + arguments[ a ]
/**/				);
/**/			}
		}
	}

	if( v_focus === undefined )
	{
		v_focus =
			true;
	}

	if( v_retainx === undefined )
	{
		v_retainx =
			null;
	}

/**/if( CHECK )
/**/{
/**/
/**/	if( v_at === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute at'
/**/		);
/**/	}
/**/
/**/	if( v_at === null )
/**/	{
/**/		throw new Error(
/**/			'at must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_at ) !== 'number'
/**/		||
/**/		Math.floor( v_at ) !== v_at
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_focus === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute focus'
/**/		);
/**/	}
/**/
/**/	if( v_focus === null )
/**/	{
/**/		throw new Error(
/**/			'focus must not be null'
/**/		);
/**/	}
/**/	if(
/**/		typeof( v_focus ) !== 'boolean'
/**/	)
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_path === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute path'
/**/		);
/**/	}
/**/
/**/	if( v_path === null )
/**/	{
/**/		throw new Error(
/**/			'path must not be null'
/**/		);
/**/	}
/**/	if( v_path.reflect !== 'Path' )
/**/	{
/**/		throw new Error(
/**/			'type mismatch'
/**/		);
/**/	}
/**/
/**/	if( v_retainx === undefined )
/**/	{
/**/		throw new Error(
/**/			'undefined attribute retainx'
/**/		);
/**/	}
/**/
/**/	if( v_retainx !== null )
/**/	{
/**/		if(
/**/			typeof( v_retainx ) !== 'number'
/**/		)
/**/		{
/**/			throw new Error(
/**/				'type mismatch'
/**/			);
/**/		}
/**/	}
/**/}

	if(
		inherit
		&&
		v_at === inherit.at
		&&
		v_focus === inherit.focus
		&&
		v_path.equals( inherit.path )
		&&
		v_retainx === inherit.retainx
	)
	{
		return inherit;
	}

	return (
		new Caret(
			_tag,
			v_at,
			v_focus,
			v_path,
			v_retainx
		)
	);
};


/*
| Reflection.
*/
Caret.prototype.reflect =
	'Caret';


/*
| Sets values by path.
*/
Caret.prototype.setPath =
	JoobjProto.setPath;


/*
| Gets values by path.
*/
Caret.prototype.getPath =
	JoobjProto.getPath;


/*
| Checks for equal objects.
*/
Caret.prototype.equals =
	function(
		obj
	)
{
	if( this === obj )
	{
		return true;
	}

	if( !obj )
	{
		return false;
	}

	return (
		this.at === obj.at
		&&
		this.focus === obj.focus
		&&
		this.path.equals( obj.path )
		&&
		this.retainx === obj.retainx
	);
};


} )( );
