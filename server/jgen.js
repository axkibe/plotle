/*
| Generates jools like objects from a jools definition.
|
| Authors: Axel Kittenberger
*/

/*
| Capsule (to make jshint happy)
*/
(function( ) {
'use strict';


var
	Jools =
		require( '../shared/jools' );

if( typeof( require ) === 'undefined' )
{
	throw new Error(
		'this code requires node!'
	);
}


/*
| Generates code from a jools object definition
*/
var
	jgen =
		function(
			jdef  // the jools object definition
		)
{
	var
		a,

		// shortcut
		attr =
			jdef.attributes;

		// alphabetical sorted attribute names
		attrList =
			[ ],

		r =
			[ ];

	// tests if all parameters are known

	for( a in jdef )
	{
		switch( a )
		{
			case 'name' :
			case 'attributes' :

				break;

			default :

				throw new Error(
					'invalid jdef parameter: ' + a
				);
		}
	}

	if(
		!Jools.isString( jdef.name )
	)
	{
		throw new Error(
			'name missing'
		);
	}

	if(
		!jdef.attributes
	)
	{
		throw new Error(
			'attributes missing'
		);
	}

	

	r.push(
		'/*',
		'| This is an autogenerated file.',
		'|',
		'| DO NOT EDIT!',
		'*/',
		'',
		'/*',
		'| Capsule',
		'*/',
		'(function( ) {',
		'\'use strict\';',
		'',
		'var',
		'	_tag =',
		'		\'' + Math.floor( Math.random( ) * 1000000000 ) + '\';',
		'',
		'/*',
		'| Constructor.',
		'*/',
		a.name = ' =',
		'\tfunction(',
		'\t\ttag,'
	);

	for( var a in jdef.attributes )
	{
		r.push(
			'\t\t' + a
		);
	}

	r.push(
		'\t)',
		'{',
		'/**/if( CHECK )',
		'/**/{'
		'/**/\t\tif( tag !== _tag )',
		'/**/\t\t{',
		'/**/\t\t\tthrow new Error(',
		'/**/\t\t\t\t\'tag mismatch\'',
		'/**/\t\t}',
		''
	);

	for( var a in jdef.attributes )
	{
		r.push(
			'\t\t' + a
		);
	}

	r.push(
		'});',
		''
	);

	return r.join('\n');
};


/*
| Node export
*/
module.exports =
	jgen;

} )( );
